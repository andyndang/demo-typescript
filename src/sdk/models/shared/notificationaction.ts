/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionType } from "./actiontype";
import { Expose, Transform } from "class-transformer";

/**
 * GetNotificationAction default response
 */
export class NotificationAction extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "creationTime" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    creationTime?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "enabled" })
    enabled?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "lastUpdate" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    lastUpdate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "payload" })
    payload?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: ActionType;
}
