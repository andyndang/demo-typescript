/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListApiKeysSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Key" })
    apiKeyAuth: string;
}

export class ListApiKeysRequest extends SpeakeasyBase {
    /**
     * Your company's unique organization ID
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org_id" })
    orgId: string;

    /**
     * The unique user ID in an organization.
     *
     * @remarks
     *  A list of objects with key ID and other metadata about the keys, but no secret values
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=user_id" })
    userId?: string;
}

export class ListApiKeysResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * A list of objects with key ID and other metadata about the keys, but no secret values
     */
    @SpeakeasyMetadata()
    listUserApiKeys?: shared.ListUserApiKeys;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
